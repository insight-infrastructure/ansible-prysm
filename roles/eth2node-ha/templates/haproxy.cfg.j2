global
        log stdout format raw local0 info
        pidfile /run/haproxy.pid
        daemon
 
defaults
        log     global
        option  httplog
        option  dontlognull
        option  dontlog-normal
        
        timeout connect 3s
        timeout queue 3s
        timeout server 5s

###################
# docker dns server
resolvers nocachedns
        parse-resolv-conf
        hold valid 1s

##############
# stats
frontend stats
        mode http
        bind *:80

        stats enable
        stats uri /stats
        stats refresh 5s
        stats admin if TRUE


################
# geth
frontend eth1_fe
        mode http
        
        bind *:18545

        timeout client 15s

        default_backend geth_be

backend eth1_be
        mode http

{% if !eth2node_ha_use_external_eth1 %}
        option httpchk POST / HTTP/1.0\r\nContent-Type:\ application/json\r\nContent-Length:\ 59\r\n\r\n{\"jsonrpc\":\"2.0\",\"method\":\"eth_syncing\",\"params\":[],\"id\":1}
        http-check expect string '{"jsonrpc":"2.0","id":1,"result":false}'
        
        default-server check inter 5s fall 1 rise 3 init-addr none
        server srv1 geth:8545 resolvers nocachedns
{% for host in ansible_play_hosts %}
{% if host != inventory_hostname and hostvars[host].eth2node_ha_name != "" and hostvars[host].eth2node_ha_ip != "" %}
        server {{hostvars[host].eth2node_ha_name}} {{hostvars[host].eth2node_ha_ip}}:8545 backup
{% endif %}
{% endfor %}
{% else %}
{% if eth2node_ha_external_eth1_uri != "" %}
        http-request set-path {{eth2node_ha_external_eth1_uri}}
{% endif %}
		http-request set-header Host {{eth2node_ha_external_eth1_host}}

        server eth1_external {{eth2node_ha_external_eth1_host}}:{{eth2node_ha_external_eth1_port}} check {% if eth2node_ha_external_eth1_ssl %} check-ssl ssl verify none sni str({{eth2node_ha_external_eth1_host}}) check-sni {{eth2node_ha_external_eth1_host}}{% endif %}
{% endif %}

##################
# beacon chain
frontend beacon_fe
        mode http

        bind *:14000 alpn h2,http/1.1

        timeout client 15s

        default_backend beacon_be

backend beacon_be
        mode http
        
        option httpchk GET /healthz HTTP/1.0
        http-check expect ! rstring '(?i)error'

        default-server check port 8480 proto h2 inter 1s fall 1 rise 3 init-addr none
        server srv1 beacon:4000 resolvers nocachedns
{% for host in ansible_play_hosts %}
  {% if host != inventory_hostname and hostvars[host].eth2node_ha_name != "" and hostvars[host].eth2node_ha_ip != "" %}
        server {{hostvars[host].eth2node_ha_name}} {{hostvars[host].eth2node_ha_ip}}:4000 backup
  {% endif %}
{% endfor %}

###################
# slasher
frontend slasher_fe
         mode http
         
         bind *:14002 alpn h2,http/1.1
         
         timeout client 15s
         
         default_backend slasher_be

backend slasher_be
         mode http
         
         option httpchk GET /healthz HTTP/1.0
         http-check expect ! rstring '(?i)error'
         
         default-server check port 8680 proto h2 inter 1s fall 1 rise 5 init-addr none
         server srv1 slasher:4002 resolvers nocachedns
{% for host in ansible_play_hosts %}
  {% if host != inventory_hostname and hostvars[host].eth2node_ha_name != "" and hostvars[host].eth2node_ha_ip != "" %}
        server {{hostvars[host].eth2node_ha_name}} {{hostvars[host].eth2node_ha_ip}}:4002 backup
  {% endif %}
{% endfor %}
