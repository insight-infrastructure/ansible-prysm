---
### Move files
- name: Install required system packages
  apt: 
    name: "{{ item }}" 
    state: latest 
    update_cache: yes
  loop: 
  - unzip
  - zip
  become: yes

- name: src-host - Zip validator's datadir
  archive:
    path: "{{ prysm_install_path }}/validator"
    dest: "{{ prysm_install_path }}/validator.zip"
    format: zip
  when: inventory_hostname == 'to_upgrade'

- name: src-host - Copy validator's zipped datadir
  fetch:
    src: "{{ prysm_install_path }}/validator.zip"
    dest: "{{ ha_upgrade_tmp_files }}/validator.zip"
    flat: yes
  when: inventory_hostname == 'to_upgrade'

- name: src-host - Remove validator's zipped datadir
  file:
    path: "{{ prysm_install_path }}/validator.zip"
    state: absent
  when: inventory_hostname == 'to_upgrade'

- name: src-host - Copy validator's config file
  fetch:
    src: "{{ prysm_install_path }}/config/validator-wallet.yaml"
    dest: "{{ ha_upgrade_tmp_files }}/validator-wallet.yaml"
    flat: yes
  when: inventory_hostname == 'to_upgrade'

- name: dest-host - Copy validator's config file
  copy:
    src: "{{ ha_upgrade_tmp_files }}/validator-wallet.yaml"
    dest: "{{ prysm_install_path }}/config/validator-wallet.yaml"
  when: inventory_hostname == 'backup'

- name: dest-host - Copy validator's zipped datadir
  copy:
    src: "{{ ha_upgrade_tmp_files }}/validator.zip"
    dest: "{{ prysm_install_path }}/validator.zip"
  when: inventory_hostname == 'backup'

- name: dest-host - Unzip validator's datadir
  unarchive:
    src: "{{ prysm_install_path }}/validator.zip"
    dest: "{{ prysm_install_path }}"
    remote_src: yes
  when: inventory_hostname == 'backup'

- name: src-host - Remove validator's zipped datadir
  file:
    path: "{{ prysm_install_path }}/validator.zip"
    state: absent
  when: inventory_hostname == 'backup'

### Switch validator
- name: dest-host - Check on beacon node (fully synced)
  shell: "docker-compose logs --tail=10 beacon"
  args:
    chdir: "{{ prysm_install_path }}"
  register: beacon_sync
  until: beacon_sync.stdout|regex_findall('Synced new block')|length > 0
  retries: 60 # a minute
  delay: 1
  when: inventory_hostname == 'backup'

- name: dest-host - (Re)Start validators
  shell: "docker-compose stop validator && docker-compose up -d validator"
  args:
    chdir: "{{ prysm_install_path }}"
  when: inventory_hostname == 'backup'

- name: dest-host - Check on validator (staking)
  shell: "docker-compose logs --tail=4 validator"
  args:
    chdir: "{{ prysm_install_path }}"
  register: validator_logs
  until: >
    validator_logs.stdout|regex_findall('Validating for public key')|length > 0 or
    validator_logs.stdout|regex_findall('Attestation schedule')|length > 0 or
    validator_logs.stdout|regex_findall('Submitted new attestations')|length > 0
  retries: 300 # 5 minutes
  delay: 1
  when: inventory_hostname == 'backup'

- name: src-host - Shut down validator
  shell: "docker-compose stop validator"
  args:
    chdir: "{{ prysm_install_path }}"
  when: inventory_hostname == 'to_upgrade'